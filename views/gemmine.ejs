<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="css/gemmine.css" />
    <title>Document</title>
  </head>
  <body>
    <img class="background" src="img/mine.jpeg" />
    <img />

    <a href="javascript:history.go(-1)" class="back-button">
      <p class="back">â‡¦ BACK</p></a
    >
    <div class="menu">
      <p class="rules">
        Rules: Once you start timer you can't stop! Work for 1 hour to earn a
        gem, no pausing. You got this!
      </p>
      <button id="start-timer">START MINING!</button>
      <div id="timer"></div>

      <form action="/gemmine:num" method="POST">
        <input class="gemEarn" type="hidden" name="gems" />
      </form>
    </div>
  </body>
  <script>
    let numberGems = "<%= gems %>";
    
    // I need to create a form element
    // when the timer ends
    // I need to pop up a "recieve button disguised as a form"
    // then when the user clicks the button, it will make a post request and
    // then i need a route handler for the gems and have an update function in that
    const gemEarn = document.querySelector(".gemEarn");
    const startTimerButton = document.getElementById("start-timer");
    const timerElement = document.getElementById("timer");
    const newGem = document.querySelector(".gemEarn");
    const startTimer = () => {
      let timer;
      timer = 60 * 0.1;
      const remainingTime = setInterval(() => {
        // Decrement the timer by 1 second
        timer--;
        // Update the timer element
        // minutes by rounding integer and dividing by 60, seconds is the remainder
        timerElement.innerHTML = `${Math.floor(timer / 60)}:${timer % 60}`;
        if (timer === 0) {
          clearInterval(remainingTime);
          gemEarn.insertAdjacentHTML(
            "afterend",
            `<button class= "collect" type="submit">Collect Your Gem</button>
              <img class = "gem" src="img/gemstone.webp" />
            `
          );
          // append a form
          const gemImage = document.querySelector(".gem");
          console.log(gemImage);
          gemImage.style.visiblity = "visible";
          console.log(numberGems);
          const collect = document.querySelector(".collect");
          collect.addEventListener("click", () => {
            numberGems += 50;
            gemEarn.setAttribute("value", `${numberGems}`);
            gemImage.classList.add("hidden");
            setTimeout(() => {
              disableButton(".collect");
            }, 100);
            collect.insertAdjacentHTML(
              "afterend",
              `
              <div class = "end">
              <button class = "home"><a class = "backhome">Return Home</a></button>
              <button class = "restart"><a class = "newPage"> Restart Timer</a></button>
                </div>`
            );
            /*
            const url = window.location.href;
            
            restart.setAttribute("href", `${url}`);
            */
            const restart = document.querySelector(".restart");
            const newPage = document.querySelector(".newPage");
            const home = document.querySelector(".backhome");
            home.setAttribute("href", `/gatcha:&<%= userId %>`);
            newPage.setAttribute("href", `/gemmine:&<%= userId %>`);
          });
        }
      }, 1000);
    };
    function disableButton(button) {
      console.log("button is disabled");
      document.querySelector(button).disabled = true;
    }
    startTimerButton.addEventListener("click", () => {
      // Set the timer to 60 minutes
      // Start the timer
      disableButton("#start-timer");
      startTimer();
    });
    // Start the countdown timer
    /*
    const start = document
      .querySelector(".button")
      .addEventListener("click", () => {
        setInterval(updateTimer, 1000);
      });
      */
    const gemImage = document.querySelector(".gem");
    /*
    finished = true;
    if (finished === true) {
      gems++;
    }
    */
  </script>
</html>
